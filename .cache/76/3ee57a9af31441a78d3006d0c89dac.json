{"id":"src/Decorator Project/InjectDecorator.ts","dependencies":[{"name":"D:\\大前端\\my github\\TS-study-demo\\tsconfig.json","includedInParent":true,"mtime":1704621511516},{"name":"D:\\大前端\\my github\\TS-study-demo\\package.json","includedInParent":true,"mtime":1704698003936},{"name":"reflect-metadata","loc":{"line":1,"column":7,"index":7},"parent":"D:\\大前端\\my github\\TS-study-demo\\src\\Decorator Project\\InjectDecorator.ts","resolved":"D:\\大前端\\my github\\TS-study-demo\\node_modules\\reflect-metadata\\Reflect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Inject = Inject;\nrequire(\"reflect-metadata\");\n// export function Inject(injectId: string): PropertyDecorator {\nfunction Inject(injectId) {\n  return function (targetClassPrototype, prop) {\n    // 我们想获取属性装饰器修饰的属性的类型\n    // 通过下面一行代码可以获取到，这里先不了解，记住就行\n    var PropClass = Reflect.getMetadata('design:type', targetClassPrototype, prop);\n    console.log('进入属性装饰器：', 'injectId: ', injectId, ' PropClass: ', PropClass);\n    var userService = new PropClass();\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":7}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":9,"column":0}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":9,"column":9}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":22},"generated":{"line":9,"column":15}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":23},"generated":{"line":9,"column":16}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":9,"column":24}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":9,"column":26}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":10,"column":2}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":10,"column":9}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":10,"column":19}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":39},"generated":{"line":10,"column":39}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":10,"column":41}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":45},"generated":{"line":10,"column":45}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":6,"column":45},"generated":{"line":10,"column":47}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":11,"column":4}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":12,"column":4}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":13,"column":4}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":13,"column":8}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":13,"column":17}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":13,"column":20}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":27},"generated":{"line":13,"column":27}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":13,"column":28}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":39},"generated":{"line":13,"column":39}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":40},"generated":{"line":13,"column":40}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":53},"generated":{"line":13,"column":53}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":55},"generated":{"line":13,"column":55}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":75},"generated":{"line":13,"column":75}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":77},"generated":{"line":13,"column":77}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":81},"generated":{"line":13,"column":81}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":9,"column":82},"generated":{"line":13,"column":82}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":14,"column":4}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":14,"column":11}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":14,"column":12}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":14,"column":15}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":14,"column":16}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":14,"column":26}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":14,"column":28}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":40},"generated":{"line":14,"column":40}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":14,"column":42}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":50},"generated":{"line":14,"column":50}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":52},"generated":{"line":14,"column":52}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":66},"generated":{"line":14,"column":66}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":68},"generated":{"line":14,"column":68}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":77},"generated":{"line":14,"column":77}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":10,"column":78},"generated":{"line":14,"column":78}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":4}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":15,"column":8}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":15,"column":19}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":15,"column":22}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":28},"generated":{"line":15,"column":26}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":15,"column":35}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":15,"column":36}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":11,"column":39},"generated":{"line":15,"column":37}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":16,"column":2}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":12,"column":3},"generated":{"line":16,"column":3}},{"source":"src/Decorator Project/InjectDecorator.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":17,"column":0}}],"sources":{"src/Decorator Project/InjectDecorator.ts":"import 'reflect-metadata'\r\n// 防止每次都给属性装饰器参数指定类型，建议提前定义类型，底层也已提供了PropertyDecorator\r\ntype MyPropDecorator = (targetClassPrototype: any, prop: string | symbol) => void;\r\n// export function Inject(injectId: string): PropertyDecorator {\r\nexport function Inject(injectId: string): MyPropDecorator {\r\n  return function (targetClassPrototype, prop) {\r\n    // 我们想获取属性装饰器修饰的属性的类型\r\n    // 通过下面一行代码可以获取到，这里先不了解，记住就行\r\n    let PropClass = Reflect.getMetadata('design:type', targetClassPrototype, prop);\r\n    console.log('进入属性装饰器：', 'injectId: ', injectId, ' PropClass: ', PropClass)\r\n    const userService = new PropClass();\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"9b593a1137092a94100ef68f62310bd8","cacheData":{"env":{}}}