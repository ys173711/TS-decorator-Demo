{"id":"src/Decorator Project/MethodDecorator.ts","dependencies":[{"name":"D:\\大前端\\my github\\TS-study-demo\\tsconfig.json","includedInParent":true,"mtime":1704621511516},{"name":"D:\\大前端\\my github\\TS-study-demo\\package.json","includedInParent":true,"mtime":1704698003936},{"name":"reflect-metadata","loc":{"line":1,"column":7,"index":7},"parent":"D:\\大前端\\my github\\TS-study-demo\\src\\Decorator Project\\MethodDecorator.ts","resolved":"D:\\大前端\\my github\\TS-study-demo\\node_modules\\reflect-metadata\\Reflect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nrequire(\"reflect-metadata\");\nfunction get(reqPath) {\n  return function (targetClassPrototype, methodName, descriptor) {\n    // 给方法上定义一个元数据，key为'path'，值为reqPath\n    Reflect.defineMetadata('path', reqPath, targetClassPrototype, methodName);\n    console.log('进入方法装饰器：', 'path: ', reqPath);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":7}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":8,"column":0}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":8,"column":9}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":8,"column":12}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":8,"column":13}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":35},"generated":{"line":8,"column":20}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":5,"column":35},"generated":{"line":8,"column":22}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":9,"column":2}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":9,"column":9}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":9,"column":19}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":39},"generated":{"line":9,"column":39}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":9,"column":41}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":51},"generated":{"line":9,"column":51}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":53},"generated":{"line":9,"column":53}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":63},"generated":{"line":9,"column":63}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":6,"column":63},"generated":{"line":9,"column":65}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":10,"column":4}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":11,"column":4}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":11},"generated":{"line":11,"column":11}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":11,"column":12}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":26},"generated":{"line":11,"column":26}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":11,"column":27}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":33},"generated":{"line":11,"column":33}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":35},"generated":{"line":11,"column":35}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":42},"generated":{"line":11,"column":42}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":44},"generated":{"line":11,"column":44}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":64},"generated":{"line":11,"column":64}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":66},"generated":{"line":11,"column":66}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":76},"generated":{"line":11,"column":76}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":8,"column":77},"generated":{"line":11,"column":77}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":12,"column":4}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":11},"generated":{"line":12,"column":11}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":12,"column":12}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":12,"column":15}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":12,"column":16}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":26},"generated":{"line":12,"column":26}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":12,"column":28}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":12,"column":36}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":12,"column":38}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":45},"generated":{"line":12,"column":45}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":9,"column":46},"generated":{"line":12,"column":46}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":13,"column":2}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":10,"column":3},"generated":{"line":13,"column":3}},{"source":"src/Decorator Project/MethodDecorator.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":14,"column":0}}],"sources":{"src/Decorator Project/MethodDecorator.ts":"\r\n\r\n\r\nimport 'reflect-metadata'\r\nexport function get(reqPath: string): MethodDecorator {\r\n  return function (targetClassPrototype, methodName, descriptor) {\r\n    // 给方法上定义一个元数据，key为'path'，值为reqPath\r\n    Reflect.defineMetadata('path', reqPath, targetClassPrototype, methodName);\r\n    console.log('进入方法装饰器：', 'path: ', reqPath)\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"a53fe72ed4ce565db2024a88dbbe2210","cacheData":{"env":{}}}